// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestInterviewApp.Data;

#nullable disable

namespace TestInterviewApp.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    [Migration("20250623075753_FreshMigrationAndSeeding")]
    partial class FreshMigrationAndSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestInterviewApp.Models.Cart", b =>
                {
                    b.Property<int>("Cart_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cart_Id"));

                    b.Property<int>("Id_product")
                        .HasColumnType("int");

                    b.Property<string>("gambar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cart_Id");

                    b.HasIndex("Id_product");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TestInterviewApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("alamat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TestInterviewApp.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("gambar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("harga")
                        .HasColumnType("int");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            gambar = "Product-1.png",
                            harga = 20000,
                            nama = "Produk 1"
                        },
                        new
                        {
                            Id = 2,
                            gambar = "Product-2.png",
                            harga = 35000,
                            nama = "Produk 2"
                        },
                        new
                        {
                            Id = 3,
                            gambar = "Product-3.png",
                            harga = 30000,
                            nama = "Produk 3"
                        },
                        new
                        {
                            Id = 4,
                            gambar = "Product-4.png",
                            harga = 45000,
                            nama = "Produk 4"
                        },
                        new
                        {
                            Id = 5,
                            gambar = "Product-5.png",
                            harga = 50000,
                            nama = "Produk 5"
                        },
                        new
                        {
                            Id = 6,
                            gambar = "Product-6.png",
                            harga = 25000,
                            nama = "Produk 6"
                        });
                });

            modelBuilder.Entity("TestInterviewApp.Models.SnapRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("SnapRequests");
                });

            modelBuilder.Entity("TestInterviewApp.Models.Cart", b =>
                {
                    b.HasOne("TestInterviewApp.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("Id_product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TestInterviewApp.Models.SnapRequest", b =>
                {
                    b.HasOne("TestInterviewApp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
